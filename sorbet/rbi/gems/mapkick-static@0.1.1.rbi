# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `mapkick-static` gem.
# Please instead update this file by running `bin/tapioca gem mapkick-static`.

# source://mapkick-static//lib/mapkick/static/base_map.rb#1
module Mapkick; end

# source://mapkick-static//lib/mapkick/static/base_map.rb#2
module Mapkick::Static; end

# source://mapkick-static//lib/mapkick/static/area_map.rb#3
class Mapkick::Static::AreaMap < ::Mapkick::Static::BaseMap
  private

  # source://mapkick-static//lib/mapkick/static/area_map.rb#6
  def generate_features(data, default_color); end
end

# source://mapkick-static//lib/mapkick/static/base_map.rb#3
class Mapkick::Static::BaseMap
  # @return [BaseMap] a new instance of BaseMap
  #
  # source://mapkick-static//lib/mapkick/static/base_map.rb#6
  def initialize(data, width: T.unsafe(nil), height: T.unsafe(nil), markers: T.unsafe(nil), style: T.unsafe(nil), alt: T.unsafe(nil), access_token: T.unsafe(nil), view_context: T.unsafe(nil)); end

  # source://mapkick-static//lib/mapkick/static/base_map.rb#27
  def to_s; end

  # Returns the value of attribute url.
  #
  # source://mapkick-static//lib/mapkick/static/base_map.rb#4
  def url; end

  # Returns the value of attribute url_2x.
  #
  # source://mapkick-static//lib/mapkick/static/base_map.rb#4
  def url_2x; end

  private

  # source://mapkick-static//lib/mapkick/static/base_map.rb#71
  def check_access_token(access_token); end

  # https://docs.mapbox.com/api/overview/#url-length-limits
  #
  # source://mapkick-static//lib/mapkick/static/base_map.rb#90
  def check_request_size; end

  # source://mapkick-static//lib/mapkick/static/base_map.rb#41
  def create_geojson(data, markers); end

  # source://mapkick-static//lib/mapkick/static/base_map.rb#96
  def image_style; end

  # round to reduce URL size
  #
  # source://mapkick-static//lib/mapkick/static/base_map.rb#85
  def round_coordinate(point); end

  # source://mapkick-static//lib/mapkick/static/base_map.rb#62
  def set_query(access_token, viewport); end

  # source://mapkick-static//lib/mapkick/static/base_map.rb#33
  def set_style(style); end

  # source://mapkick-static//lib/mapkick/static/base_map.rb#50
  def set_viewport(geojson); end
end

# source://mapkick-static//lib/mapkick/static.rb#27
class Mapkick::Static::Error < ::StandardError; end

# source://mapkick-static//lib/mapkick/static/helper.rb#3
module Mapkick::Static::Helper
  # source://mapkick-static//lib/mapkick/static/helper.rb#8
  def static_area_map(data, **options); end

  # source://mapkick-static//lib/mapkick/static/helper.rb#4
  def static_map(data, **options); end
end

# source://mapkick-static//lib/mapkick/static/map.rb#3
class Mapkick::Static::Map < ::Mapkick::Static::BaseMap
  private

  # source://mapkick-static//lib/mapkick/static/map.rb#6
  def generate_features(data, default_color); end

  # source://mapkick-static//lib/mapkick/static/map.rb#29
  def row_coordinates(row); end
end

# source://mapkick-static//lib/mapkick/static/version.rb#3
Mapkick::Static::VERSION = T.let(T.unsafe(nil), String)
